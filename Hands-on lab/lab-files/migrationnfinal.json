{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "AzureUserName": {
        "type": "string"
      },
      "AzurePassword": {
        "type": "securestring"
      },
      "DeploymentID": {
        "type": "string"
      },
      "ODLID": {
        "type": "string"
      },
      "diskStorageType": {
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Premium_LRS"
        ],
        "type": "string"
      },
      "vmAdminUsername": {
        "type": "string"
      },
      "vmAdminPassword": {
        "type": "SecureString"
      },
      "InstallCloudLabsShadow": {
        "type": "string",
        "defaultValue": "yes",
        "allowedValues": [
          "yes",
          "no"
        ]
      },
  
      "azuserobjectid": {
        "type": "string"
      },
      "trainerUserName": {
        "type": "string"
      },
      "trainerUserPassword": {
        "type": "string"
      },
      "AppID": {
        "type": "string"
      },
      "AppSecret": {
        "type": "string"
      },
        "dbusername": {
          "type": "string"
        },
        "dbpasswd": {
          "type": "securestring"
        },
        "firewallRules": {
          "type": "string",
          "defaultValue": [
            {
	      "name": "rule1",    
              "startIPAddress": "192.168.0.1",
              "endIPAddress": "192.168.0.255"
            },
            {
	      "name": "rule2",
              "startIPAddress": "192.168.1.1",
              "endIPAddress": "192.168.1.255"
            }
          ]
        },

        "serverEdition": {
          "type": "string",
          "defaultValue": "Burstable",
          "allowedValues": [
            "Burstable",
            "Generalpurpose",
            "MemoryOptimized"
          ],
          "metadata": {
            "description": "The tier of the particular SKU. High Availability is available only for GeneralPurpose and MemoryOptimized sku."
          }
        },
        "version": {
          "type": "string",
          "defaultValue": "8.0.21",
          "allowedValues": [
            "5.7",
            "8.0.21"
          ],
          "metadata": {
            "description": "Server version"
          }
        },
        "availabilityZone": {
          "type": "string",
          "defaultValue": "1",
          "metadata": {
            "description": "Availability Zone information of the server. (Leave blank for No Preference)."
          }
        },
        "haEnabled": {
          "type": "string",
          "defaultValue": "Disabled",
          "allowedValues": [
            "Disabled",
            "SameZone",
            "ZoneRedundant"
          ],
          "metadata": {
            "description": "High availability mode for a server : Disabled, SameZone, or ZoneRedundant"
          }
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "defaultValue": "2",
          "metadata": {
            "description": "Availability zone of the standby server."
          }
        },
        "storageSizeGB": {
          "type": "int",
          "defaultValue": 20
        },
        "storageIops": {
          "type": "int",
          "defaultValue": 360
        },
        "storageAutogrow": {
          "type": "string",
          "defaultValue": "Enabled",
          "allowedValues": [
            "Enabled",
            "Disabled"
          ]
        },
        "skuName": {
          "type": "string",
          "defaultValue": "Standard_B1ms",
          "metadata": {
            "description": "The name of the sku, e.g. Standard_D32ds_v4."
          }
        },
        "backupRetentionDays": {
          "type": "int",
          "defaultValue": 7
        },
        "geoRedundantBackup": {
          "type": "string",
          "defaultValue": "Disabled",
          "allowedValues": [
            "Disabled",
            "Enabled"
          ]
        },
        "serverName": {
          "type": "string"
        },
        "databaseName": {
          "type": "string"
        },
        "serviceName": {
          "type": "string",
          "metadata": {
            "description": "Name of the new migration service."
          }
        }
    },
    "variables": {
      "cloudlabsCommon": "[concat(' -AzureUserName ', parameters('AzureUserName'), ' -AzurePassword ', parameters('AzurePassword'), ' -AzureTenantID ', variables('AzureTenantID'), ' -AzureSubscriptionID ', variables('AzureSubscriptionID'), ' -ODLID ', parameters('ODLID'), ' -DeploymentID ', parameters('DeploymentID'), ' -InstallCloudLabsShadow ', parameters('InstallCloudLabsShadow'), ' -vmAdminPassword ', parameters('vmAdminPassword'), ' ', '-AppID', ' ',parameters('AppID'), ' ', '-AppSecret', ' ',parameters('AppSecret'))]",
      "Enable-CloudLabsEmbeddedShadow": "[concat(' -vmAdminUsername ', parameters('vmAdminUsername'), ' -trainerUserName ', parameters('trainerUserName'), ' -trainerUserPassword ', parameters('trainerUserPassword'))]",
      "AzureSubscriptionID": "[subscription().subscriptionId]",
      "AzureTenantID": "[subscription().tenantId]",
      "location": "[resourceGroup().location]",
      "subnetPrefix": "10.0.0.0/24",
      "addressPrefix": "10.0.0.0/16",
      "jumphost": "[concat('labvm-',parameters('DeploymentID'))]",
      "networkInterfaceName1": "[concat(variables('jumphost'), '-nic')]",
      "virtualNetworkName1": "labvm-vnet1",
      "subnetName1": "Subnet1",
      "virtualMachineSize": "Standard_D2s_v3",
      "vnetId1": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName1'))]",
      "subnetRef1": "[concat(variables('vnetId1'), '/subnets/', variables('subnetName1'))]",
      "publicIpAddressName1": "[concat(variables('jumphost'), '-pip')]",
      "vmPublicIpDnsName": "[concat('labvm',uniqueString(resourceGroup().id))]",
      "networkSecurityGroupName1": "[concat(variables('jumphost'), '-nsg')]",
       
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2017-04-01",
        "name": "[variables('virtualNetworkName1')]",
        "location": "[variables('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName1')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2019-02-01",
        "name": "[variables('publicIpAddressName1')]",
        "location": "[variables('location')]",
        "sku": {
          "name": "Basic"
        },
        "properties": {
          "publicIpAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('vmPublicIpDnsName')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2017-06-01",
        "name": "[variables('networkSecurityGroupName1')]",
        "location": "[variables('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-rdp",
              "properties": {
                "priority": 110,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3389"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2017-09-01",
        "name": "[variables('networkInterfaceName1')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName1'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName1'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName1'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef1')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName1'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName1'))]"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2017-03-30",
        "name": "[variables('jumphost')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName1'))]"
        ],
        "properties": {
          "osProfile": {
            "computerName": "[variables('jumphost')]",
            "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]",
            "windowsConfiguration": {
              "provisionVmAgent": "true"
            }
          },
          "hardwareProfile": {
            "vmSize": "[variables('virtualMachineSize')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2022-datacenter-azure-edition",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(variables('jumphost'),'OSDisk')]",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('diskStorageType')]"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName1'))]"
              }
            ]
          }
        },
        "resources": [
          {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(variables('jumphost'),'/', 'winExtension')]",
            "location": "[variables('location')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('jumphost'))]"
            ],
            "tags": {
              "displayName": "VM Extension"
            },
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.8",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "https://testrmspektar1234.blob.core.windows.net/test/Deploy-AzureResourceGroup.ps1"
                ]
              },
              "protectedSettings": {
                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy ByPass -File Deploy-AzureResourceGroup.ps1', variables('cloudlabsCommon'), variables('Enable-CloudLabsEmbeddedShadow'))]"
              }
            }
          }
        ]
      },
      {
          "type": "Microsoft.DBforMySQL/flexibleServers",
          "apiVersion": "2021-12-01-preview",
          "name": "[parameters('serverName')]",
          "location": "[variables('location')]",
          "sku": {
            "name": "[parameters('skuName')]",
            "tier": "[parameters('serverEdition')]"
          },
          "properties": {
            "version": "[parameters('version')]",
            "administratorLogin": "[parameters('DBusername')]",
            "administratorLoginPassword": "[parameters('DBpasswd')]",
            "availabilityZone": "[parameters('availabilityZone')]",
            "highAvailability": {
              "mode": "[parameters('haEnabled')]",
              "standbyAvailabilityZone": "[parameters('standbyAvailabilityZone')]"
            },
            "storage": {
              "storageSizeGB": "[parameters('storageSizeGB')]",
              "iops": "[parameters('storageIops')]",
              "autoGrow": "[parameters('storageAutogrow')]"
            },
            "backup": {
              "backupRetentionDays": "[parameters('backupRetentionDays')]",
              "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
            }
          }
        },
        {
          "type": "Microsoft.DBforMySQL/flexibleServers/databases",
          "apiVersion": "2021-12-01-preview",
          "name": "[format('{0}/{1}', parameters('serverName'), parameters('databaseName'))]",
          "properties": {
            "charset": "utf8",
            "collation": "utf8_general_ci"
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('serverName'))]"
          ]
        },
        {
          "copy": {
            "name": "createFirewallRules",
            "count": "[length(range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1)))]",
            "mode": "serial",
            "batchSize": 1
          },
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2020-10-01",
          "name": "[format('firewallRules-{0}', range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()])]",
          "properties": {
            "expressionEvaluationOptions": {
              "scope": "inner"
            },
            "mode": "Incremental",
            "parameters": {
              "ip": {
                "value": "[parameters('firewallRules')[range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()]]]"
              },
              "serverName": {
                "value": "[parameters('serverName')]"
              }
            },
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "serverName": {
                  "type": "string"
                },
                "ip": {
                  "type": "object"
                }
              },
              "resources": [
                {
                  "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
                  "apiVersion": "2021-12-01-preview",
                  "name": "[format('{0}/{1}', parameters('serverName'), parameters('ip').name)]",
                  "properties": {
                    "startIpAddress": "[parameters('ip').startIPAddress]",
                    "endIpAddress": "[parameters('ip').endIPAddress]"
                  }
                }
              ]
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('serverName'))]"
          ]
        },
        {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2021-05-01",
          "name": "[format('{0}/{1}', variables('virtualNetworkName1'), variables('subnetName1'))]",
          "properties": {
            "addressPrefix": "10.0.0.0/24"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName1'))]"
          ]
        },
        {
          "type": "Microsoft.DataMigration/services",
          "apiVersion": "2021-10-30-preview",
          "name": "[parameters('serviceName')]",
          "location": "[variables('location')]",
          "sku": {
            "tier": "Standard",
            "size": "1 vCores",
            "name": "Standard_1vCores"
          },
          "properties": {
            "virtualSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName1'), variables('subnetName1'))]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName1'), variables('subnetName1'))]"
          ]
        }
  
    ],
    "outputs": {
      "LABVM Admin Username": {
        "type": "String",
        "value": "[parameters('vmAdminUsername')]"
      },
      "LABVM Admin Password": {
        "type": "String",
        "value": "[parameters('vmAdminPassword')]"
      },
      "LABVM DNS Name": {
        "type": "String",
        "value": "[concat(variables('vmPublicIpDnsName'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
      },
      "Trainer Password": {
        "type": "String",
        "value": "[parameters('trainerUserPassword')]"
      },
	     "DBusername": {
          "type": "string",
		  "value": "[parameters('dbusername')]"
        },
        "DBpasswd": {
          "type": "securestring",
		  "value": "[parameters('dbpasswd')]"
        },
      "Deployment ID": {
        "type": "String",
        "value": "[parameters('DeploymentID')]"
      }
	  
    }
  }
